% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_search_list.R
\name{rb_search_list}
\alias{rb_search_list}
\title{Use this endpoint to search among the experiments.}
\usage{
rb_search_list(
  id = NULL,
  technology = NULL,
  has_publication = NULL,
  accession_code = NULL,
  alternate_accession_code = NULL,
  platform = NULL,
  organism = NULL,
  downloadable_organism = NULL,
  num_processed_samples = NULL,
  num_downloadable_samples = NULL,
  sample_keywords = NULL,
  ordering = NULL,
  search = NULL,
  limit = NULL,
  offset = NULL
)
}
\arguments{
\item{id}{number}

\item{technology}{string Allows filtering the results by technology, can have multiple values. Eg: \code{?technology=microarray&technology=rna-seq}}

\item{has_publication}{string Filter the results that have associated publications with \code{?has_publication=true}}

\item{accession_code}{string Allows filtering the results by accession code, can have multiple values. Eg: \code{?accession_code=microarray&accession_code=rna-seq}}

\item{alternate_accession_code}{string}

\item{platform}{string Allows filtering the results by platform, this parameter can have multiple values.}

\item{organism}{string Allows filtering the results by organism, this parameter can have multiple values.}

\item{downloadable_organism}{string}

\item{num_processed_samples}{number Use ElasticSearch queries to specify the number of processed samples of the results}

\item{num_downloadable_samples}{number}

\item{sample_keywords}{string}

\item{ordering}{string Which field from to use when ordering the results.}

\item{search}{string Search in title, publication_authors, sample_keywords, publication_title, submitter_institution, description, accession_code, alternate_accession_code, publication_doi, pubmed_id, sample_metadata_fields, platform_names.}

\item{limit}{integer Number of results to return per page.}

\item{offset}{integer The initial index from which to return the results.}
}
\description{
This is powered by ElasticSearch, information regarding advanced usages of the
filters can be found in the \href{https://django-elasticsearch-dsl-drf.readthedocs.io/en/0.17.1/filtering_usage_examples.html#filtering}{Django-ES-DSL-DRF docs}
}
\details{
There's an additional field in the response named \code{facets} that contain stats on the number of results per filter type.

Example Requests:\preformatted{?search=medulloblastoma
?id=1
?search=medulloblastoma&technology=microarray&has_publication=true
?ordering=source_first_published
}

This endpoint also accepts POST requests for larger queries. Any of the filters
accepted as query parameters are also accepted in a JSON object in the request
body.

Example Requests (from our tests):\if{html}{\out{<div class="sourceCode python">}}\preformatted{import requests
import json

headers = \{
    'Content-Type': 'application/json',
\}

# Basic filter
search = \{"accession_code": "GSE123"\}
requests.post(host + '/v1/search/', json.dumps(search), headers=headers)

# __in filter
search = \{"accession_code__in": ["GSE123"]\}
requests.post(host + '/v1/search/', json.dumps(search), headers=headers)

# numeric filter
search = \{"num_downloadable_samples__gt": 0\}
requests.post(host + '/v1/search/', json.dumps(search), headers=headers)
}\if{html}{\out{</div>}}
}
\concept{search}
